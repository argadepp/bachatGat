pipeline {
    agent any    
    parameters {
        string(name: 'CLUSTER_NAME', defaultValue: 'my-kind-cluster', description: 'Name of the Kind cluster')
    }
    
    stages {
        stage('Setup Kind Cluster') {
            steps {
                script {
 //                   def kindConfig = readFile('kind/cluster.yaml') // Replace with your Kind config file path
                    
                    sh """
                    kind create cluster --name ${params.CLUSTER_NAME}
                    """
                    // Pass configuration directly as input to the command
//                    sh "echo '${kindConfig}' | kind create cluster --name ${params.CLUSTER_NAME} --config -"
                }
            }
        }
        
        stage('Verify Cluster') {
            steps {
                script {
                    sh "kubectl cluster-info --context kind-${params.CLUSTER_NAME}"
                    sh "kubectl get nodes --context kind-${params.CLUSTER_NAME}"
                }
            }
        }
    }
    
    post {
        success {
            echo "Kind cluster '${params.CLUSTER_NAME}' created successfully!"
        }
        failure {
            echo "Failed to create Kind cluster '${params.CLUSTER_NAME}'"
        }
    }
}
